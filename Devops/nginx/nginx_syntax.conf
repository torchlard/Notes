server {
  listen 80;
  server_name localhost;
  client_max_body_size 1024M;

  location / {
    proxy_pass http://localhost:8080;
    proxy_set_header Host $host:$server_port;
  }
}

# Round Robin
// load balance core code
// 9 times to 8080, 1 time to 8081
upstream test {
  // ip_hash;
  fair;
  server localhost:8080 weight=9;
  server localhost:8081 weight=1;
}

server {
  listeen 81;
  server_name localhost;
  client_max_body_size 1024M;

  location / {
    proxy_pass http://test;
    proxy_set_header Host $host:$server_port;
  }
}


## url_hash
upstream backend {
  hash $request_url;
  hash_method crc32;
  server localhost:8080;
  server localhost:8081;
}

## separate dynamic static
upstream test {
  server localhost:8080;
  server localhost:8081;
}

server {
  listen 80;
  server_name localhost;
}

location / {
  root e:wwwroot;
  index index.html;
}

location ~ .(gif|jpg|jpeg|css|js)$ {
  root e:wwwroot;
}

location ~ .(jsp|do)$ {
  proxy_pass http://test;
}

## proxy
resolver 114.114.114.114 8.8.8.8;
server {
  resolver_timeout 5s;
  listen 81;

  access_log e:wwwrootproxy.access.log;
  error_log e:wwwrootproxy.error.log;

  location / {
    proxy_pass http://$host$request_url;
  }
}


## proxy_pass
# http://192.168.1.1/proxy/test.html => http://127.0.0.1/test.html
location /proxy/ {
  proxy_pass http://127.0.0.1/;
}

# http://192.168.1.1/proxy/test.html => http://127.0.0.1/proxy/test.html
location /proxy/ {
  proxy_pass http://127.0.0.1;
}

# http://192.168.1.1/proxy/test.html => http://127.0.0.1/aaa/test.html
location /proxy/ {
  proxy_pass http://127.0.0.1/aaa/;
}

# http://192.168.1.1/proxy/test.html => http://127.0.0.1/aaatest.html
location /proxy/ {
  proxy_pass http://127.0.0.1/aaa;
}

## root VS alias
[root]
root path
default: root html
config: http, server, location, if
root => root + location

[alias]
alias path
config: location
alias => replace location with alias 

alias = directory definition
root = root directory definition

# request `/t/a.html`, return `/www/root/html/t/a.html`
location ^~ /t/ {
  root /www/root/html/;
}

# request `/t/a.html`, return `/www/root/html/new_t/a.html`
location ^~ /t/ {
  alias /www/root/html/new_t/;
}

















